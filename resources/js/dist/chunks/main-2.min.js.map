{"version":3,"file":"chunks/main-2.min.js","mappings":"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","sources":["webpack://TreactionNewsletterInput/./resources/js/src/app/components/newsletter/TreactionNewsletterInput.vue","webpack://TreactionNewsletterInput/../plugin-ceres/resources/js/src/app/services/ValidationService.js","webpack://TreactionNewsletterInput/../plugin-ceres/resources/js/src/app/helper/utils.js","webpack://TreactionNewsletterInput/../plugin-ceres/resources/js/src/app/helper/strings.js","webpack://TreactionNewsletterInput/resources/js/src/app/components/newsletter/TreactionNewsletterInput.vue","webpack://TreactionNewsletterInput/./resources/js/src/app/components/newsletter/TreactionNewsletterInput.vue?83cc","webpack://TreactionNewsletterInput/../plugin-ceres/resources/js/src/app/helper/executeReCaptcha.js","webpack://TreactionNewsletterInput/./resources/js/src/app/components/newsletter/TreactionNewsletterInput.vue?986a"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      ref: \"newsletterForm\",\n      attrs: { id: \"newsletter-input-form_\" + _vm._uid, method: \"post\" },\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.validateData.apply(null, arguments)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _vm.showNameInputs\n          ? _c(\"div\", { staticClass: \"col-6\" }, [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"input-unit\",\n                  attrs: { \"data-validate\": \"!regex\" },\n                },\n                [\n                  _c(\n                    \"label\",\n                    { attrs: { for: \"first-name-input_\" + _vm._uid } },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.$translate(\"Ceres::Template.newsletterFirstName\")\n                        )\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.firstName,\n                        expression: \"firstName\",\n                      },\n                    ],\n                    attrs: {\n                      id: \"first-name-input_\" + _vm._uid,\n                      type: \"text\",\n                      \"data-validate-ref\": \"/[.:\\\\/\\\\d]/g\",\n                      \"data-testing\": \"nl-first-name\",\n                    },\n                    domProps: { value: _vm.firstName },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.firstName = $event.target.value\n                      },\n                    },\n                  }),\n                ]\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.showNameInputs\n          ? _c(\"div\", { staticClass: \"col-6 pl-0\" }, [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"input-unit\",\n                  attrs: { \"data-validate\": \"!regex\" },\n                },\n                [\n                  _c(\n                    \"label\",\n                    { attrs: { for: \"last-name-input_\" + _vm._uid } },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.$translate(\"Ceres::Template.newsletterLastName\")\n                        )\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.lastName,\n                        expression: \"lastName\",\n                      },\n                    ],\n                    attrs: {\n                      id: \"last-name-input_\" + _vm._uid,\n                      type: \"text\",\n                      \"data-validate-ref\": \"/[.:\\\\/\\\\d]/g\",\n                      \"data-testing\": \"nl-last-name\",\n                    },\n                    domProps: { value: _vm.lastName },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.lastName = $event.target.value\n                      },\n                    },\n                  }),\n                ]\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\"div\", { staticClass: \"input-group\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"input-unit\", attrs: { \"data-validate\": \"mail\" } },\n              [\n                _c(\"label\", { attrs: { for: \"email-input-id_\" + _vm._uid } }, [\n                  _vm._v(\n                    _vm._s(_vm.$translate(\"Ceres::Template.newsletterEmail\")) +\n                      \" \" +\n                      _vm._s(\n                        _vm.$translate(\n                          \"Ceres::Template.newsletterIsRequiredFootnote\"\n                        )\n                      )\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.email,\n                      expression: \"email\",\n                    },\n                  ],\n                  attrs: {\n                    id: \"email-input-id_\" + _vm._uid,\n                    type: \"email\",\n                    autocomplete: \"email\",\n                    \"data-testing\": \"nl-mail\",\n                  },\n                  domProps: { value: _vm.email },\n                  on: {\n                    focus: function ($event) {\n                      _vm.loadRecaptcha = true\n                    },\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.email = $event.target.value\n                    },\n                  },\n                }),\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.honeypot,\n                  expression: \"honeypot\",\n                },\n              ],\n              staticClass: \"honey\",\n              attrs: {\n                autocomplete: \"none\",\n                type: \"text\",\n                name: \"username\",\n                tabindex: \"-1\",\n              },\n              domProps: { value: _vm.honeypot },\n              on: {\n                input: function ($event) {\n                  if ($event.target.composing) return\n                  _vm.honeypot = $event.target.value\n                },\n              },\n            }),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _vm.showPrivacyPolicyCheckbox\n          ? _c(\"div\", { staticClass: \"col-12\" }, [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"form-check small\",\n                  attrs: { \"data-validate\": \"\" },\n                },\n                [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.privacyPolicyValue,\n                        expression: \"privacyPolicyValue\",\n                      },\n                    ],\n                    staticClass: \"form-check-input\",\n                    attrs: {\n                      id: \"privacy-policy-accept-id_\" + _vm._uid,\n                      type: \"checkbox\",\n                      name: \"privacy-policy-accept\",\n                      \"data-testing\": \"nl-policy\",\n                    },\n                    domProps: {\n                      checked: Array.isArray(_vm.privacyPolicyValue)\n                        ? _vm._i(_vm.privacyPolicyValue, null) > -1\n                        : _vm.privacyPolicyValue,\n                    },\n                    on: {\n                      change: function ($event) {\n                        var $$a = _vm.privacyPolicyValue,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = null,\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 &&\n                              (_vm.privacyPolicyValue = $$a.concat([$$v]))\n                          } else {\n                            $$i > -1 &&\n                              (_vm.privacyPolicyValue = $$a\n                                .slice(0, $$i)\n                                .concat($$a.slice($$i + 1)))\n                          }\n                        } else {\n                          _vm.privacyPolicyValue = $$c\n                        }\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"label\", {\n                    staticClass: \"form-check-label\",\n                    attrs: { for: \"privacy-policy-accept-id_\" + _vm._uid },\n                    domProps: { innerHTML: _vm._s(_vm.privacyPolicyText) },\n                  }),\n                ]\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 mt-3\" }, [\n          _c(\"div\", { staticClass: \"input-group-btn\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-block btn-primary btn-appearance\",\n                attrs: {\n                  type: \"button\",\n                  disabled: _vm.isDisabled,\n                  \"data-testing\": \"nl-send\",\n                },\n                on: { click: _vm.validateData },\n              },\n              [\n                _c(\"icon\", {\n                  attrs: { icon: \"paper-plane-o\", loading: _vm.isDisabled },\n                }),\n                _vm._v(\n                  \"\\n          \" +\n                    _vm._s(\n                      _vm.$translate(\n                        \"Ceres::Template.newsletterSubscribeButtonLabel\"\n                      )\n                    ) +\n                    \"\\n        \"\n                ),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 text-right small mt-2\" }, [\n          _vm._v(\n            \"\\n      \" +\n              _vm._s(\n                _vm.$translate(\"Ceres::Template.newsletterIsRequiredFootnote\")\n              ) +\n              \" \" +\n              _vm._s(_vm.$translate(\"Ceres::Template.newsletterIsRequired\")) +\n              \"\\n    \"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      !!_vm.$ceres.config.global.googleRecaptchaApiKey && _vm.loadRecaptcha\n        ? _c(\"recaptcha\")\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { isMail } from \"../helper/strings\";\r\nimport { isNull } from \"../helper/utils\";\r\n\r\nlet $form;\r\n\r\nexport function validate(form)\r\n{\r\n    const deferred      = $.Deferred();\r\n    const invalidFields = getInvalidFields(form);\r\n\r\n    if (invalidFields.length > 0)\r\n    {\r\n        deferred.rejectWith(form, [invalidFields]);\r\n    }\r\n    else\r\n    {\r\n        deferred.resolveWith(form);\r\n    }\r\n\r\n    return deferred;\r\n}\r\n\r\nexport function getInvalidFields(form)\r\n{\r\n    $form = $(form);\r\n    const invalidFormControls = [];\r\n\r\n    $form.find(\"[data-validate]\").each(function(i, elem)\r\n    {\r\n\r\n        if (!_validateElement($(elem)))\r\n        {\r\n            invalidFormControls.push(elem);\r\n        }\r\n    });\r\n\r\n    return invalidFormControls;\r\n}\r\n\r\nexport function markInvalidFields(fields, errorClass)\r\n{\r\n    errorClass = errorClass || \"error\";\r\n\r\n    $(fields).each(function(i, elem)\r\n    {\r\n        const $elem = $(elem);\r\n\r\n        $elem.addClass(errorClass);\r\n        _findFormControls($elem).on(\"click.removeErrorClass keyup.removeErrorClass change.removeErrorClass\", function()\r\n        {\r\n            if (_validateElement($elem))\r\n            {\r\n                $elem.removeClass(errorClass);\r\n                if ($elem.is(\"[type=\\\"radio\\\"], [type=\\\"checkbox\\\"]\"))\r\n                {\r\n                    const groupName = $elem.attr(\"name\");\r\n\r\n                    $(\".\" + errorClass + \"[name=\\\"\" + groupName + \"\\\"]\").removeClass(errorClass);\r\n                }\r\n                _findFormControls($elem).off(\"click.removeErrorClass keyup.removeErrorClass change.removeErrorClass\");\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport function markFailedValidationFields(form, validationErrors, errorClass)\r\n{\r\n    $form = $(form);\r\n\r\n    errorClass = errorClass || \"error\";\r\n\r\n    $form.find(\"[data-model]\").each((i, elem) =>\r\n    {\r\n        const $elem = $(elem);\r\n        const attribute = $elem.attr(\"data-model\");\r\n\r\n        if (attribute in validationErrors)\r\n        {\r\n            $elem.addClass(errorClass);\r\n\r\n            const fieldLabel = $elem.find(\"label\")[0].innerHTML.replace(\"*\", \"\");\r\n\r\n            if (fieldLabel)\r\n            {\r\n                const attributeCamel = attribute.replace(/([A-Z])/g, \" $1\").toLowerCase();\r\n\r\n                validationErrors[attribute][0] = validationErrors[attribute][0].replace(attributeCamel.replace(\"_\", \" \"), fieldLabel);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport function unmarkAllFields(form)\r\n{\r\n    $form = $(form);\r\n\r\n    $form.find(\"[data-validate]\").each(function(i, elem)\r\n    {\r\n        const $elem = $(elem);\r\n\r\n        $elem.removeClass(\"error\");\r\n\r\n        _findFormControls($elem).off(\"click.removeErrorClass keyup.removeErrorClass change.removeErrorClass\");\r\n    });\r\n}\r\n\r\nfunction _validateElement(elem)\r\n{\r\n    const $elem = $(elem);\r\n\r\n    /** return if the attribute data-validate is not present on the element */\r\n    if (!$elem[0].attributes.hasOwnProperty(\"data-validate\"))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    const validationKeys = $elem.attr(\"data-validate\").split(\"|\").map(function(i)\r\n    {\r\n        return i.trim();\r\n    }) || [\"text\"];\r\n\r\n    const requiredCount = $elem.attr(\"data-required-count\");\r\n\r\n    let hasError       = false;\r\n\r\n    _findFormControls($elem).each(function(i, formControl)\r\n    {\r\n        const $formControl  = $(formControl);\r\n        const validationKey = validationKeys[i] || validationKeys[0];\r\n\r\n        if (!_isActive($formControl))\r\n        {\r\n            // continue loop\r\n            return true;\r\n        }\r\n\r\n        if ($formControl.is(\"[type=\\\"checkbox\\\"], [type=\\\"radio\\\"]\"))\r\n        {\r\n            if (!_validateGroup($formControl, validationKey, requiredCount))\r\n            {\r\n                hasError = true;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if ($formControl.is(\"select\"))\r\n        {\r\n            if (!_validateSelect($formControl, validationKey))\r\n            {\r\n                hasError = true;\r\n            }\r\n\r\n            return true;\r\n        }\r\n\r\n        if (validationKey.startsWith(\"!\"))\r\n        {\r\n            if (_validateInput($formControl, validationKey.replace(\"!\", \"\")))\r\n            {\r\n                hasError = true;\r\n            }\r\n        }\r\n\r\n        else if (!_validateInput($formControl, validationKey))\r\n        {\r\n            hasError = true;\r\n        }\r\n\r\n        return false;\r\n    });\r\n\r\n    return !hasError;\r\n}\r\n\r\nfunction _validateGroup($formControl, validationKey, requiredCount)\r\n{\r\n    const groupName = $formControl.attr(\"name\");\r\n    const $group    = $form.find(\"[name=\\\"\" + groupName + \"\\\"]\");\r\n\r\n    let range = null;\r\n\r\n    let min = 1;\r\n\r\n    let max = 1;\r\n\r\n    // If no requiredCount is given default to old behaviour\r\n    if (requiredCount)\r\n    {\r\n        min = requiredCount.split(\",\")[0];\r\n        max = requiredCount.split(\",\")[1];\r\n        range = { min, max };\r\n    }\r\n    else\r\n    {\r\n        range = _eval(validationKey) || { min, max };\r\n    }\r\n\r\n    const checked   = $group.filter(\":checked\").length;\r\n\r\n    return checked >= range.min && checked <= range.max;\r\n}\r\n\r\nfunction _validateSelect($formControl, validationKey)\r\n{\r\n    const selectedOption = $formControl.children(\"option:selected\").text();\r\n\r\n    return $.trim(selectedOption) != \"\";\r\n}\r\n\r\nfunction _validateInput($formControl, validationKey)\r\n{\r\n    switch (validationKey)\r\n    {\r\n    case \"text\":\r\n        return _hasValue($formControl);\r\n    case \"number\":\r\n        return _hasValue($formControl) && $.isNumeric($.trim($formControl.val()));\r\n    case \"ref\":\r\n        return _compareRef($.trim($formControl.val()), $.trim($formControl.attr(\"data-validate-ref\")));\r\n    case \"date\":\r\n        return _isValidDate($formControl);\r\n    case \"mail\":\r\n        return _isMail($formControl);\r\n    case \"password\":\r\n        return _isPassword($formControl);\r\n    case \"file\":\r\n        return _hasValue($formControl);\r\n    case \"regex\":\r\n        return _regex($formControl);\r\n    default:\r\n        console.error(\"Form validation error: unknown validation property: \\\"\" + validationKey + \"\\\"\");\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction _regex($formControl)\r\n{\r\n    const ref = $formControl.attr(\"data-validate-ref\");\r\n    const regex = ref.startsWith(\"/\") ? _eval(ref) : new RegExp(ref);\r\n\r\n    return _hasValue($formControl) && regex.test($.trim($formControl.val()));\r\n}\r\n\r\nfunction _hasValue($formControl)\r\n{\r\n    return $.trim($formControl.val()).length > 0;\r\n}\r\n\r\n/**\r\n * @param {any} $formControl - Input inside Formular\r\n * @returns value is valid date\r\n */\r\nfunction _isValidDate($formControl)\r\n{\r\n    const string = $formControl.val();\r\n    const match = string.match(/^(?:(\\d{1,2})[.\\/-](\\d{1,2})[.\\/-](\\d{4}))|(?:(\\d{4})[.\\/-](\\d{1,2})[.\\/-](\\d{1,2}))$/);\r\n\r\n    // If match is null date is not valid\r\n    if (isNull(match))\r\n    {\r\n        return false;\r\n    }\r\n\r\n    const year = match[3] || match[4];\r\n    const month = match[2] || match[5];\r\n    const day = match[1] || match[6];\r\n\r\n    // Additional checks\r\n    if ((year >= 1901) && (month >= 1 && month <= 12) && (day >= 1 && day <= 31))\r\n    {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n/**\r\n * @param {any} value\r\n * @returns value is valid mail\r\n */\r\nfunction _isMail($formControl)\r\n{\r\n    return isMail($formControl.val());\r\n}\r\n\r\n/**\r\n * Minimum eight characters, at least one letter and one number\r\n *\r\n * @param {any} value\r\n * @returns value is valid password\r\n */\r\nfunction _isPassword($formControl)\r\n{\r\n    const passwordRegEx = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)\\S{8,}$/);\r\n\r\n    return passwordRegEx.test($formControl.val());\r\n}\r\n\r\nfunction _compareRef(value, ref)\r\n{\r\n    if ($(ref).length > 0)\r\n    {\r\n        ref = $.trim($(ref).val());\r\n    }\r\n\r\n    return value === ref;\r\n}\r\n\r\nfunction _findFormControls($elem)\r\n{\r\n    if ($elem.is(\"input, select, textarea\"))\r\n    {\r\n        return $elem;\r\n    }\r\n\r\n    return $elem.find(\"input, select, textarea\");\r\n}\r\n\r\nfunction _isActive($elem)\r\n{\r\n    return $elem.is(\":visible\") && $elem.is(\":enabled\");\r\n}\r\n\r\nfunction _eval(input)\r\n{\r\n    // eslint-disable-next-line\r\n    return (new Function(`return ${ input };`))();\r\n}\r\n\r\nexport default { validate, getInvalidFields, markInvalidFields, markFailedValidationFields, unmarkAllFields };\r\n","/**\r\n * Check if a given value equals to null\r\n *\r\n * @param {*}   object\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isNull(object)\r\n{\r\n    return object === null;\r\n}\r\n\r\n/**\r\n * Check if a given value is undefined\r\n *\r\n * @param {*} object\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isUndefined(object)\r\n{\r\n    // eslint-disable-next-line\r\n    return typeof object === typeof void 0;\r\n}\r\n\r\n/**\r\n * Check if a given value is null or undefined\r\n *\r\n * @param {*}   object\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isNullOrUndefined(object)\r\n{\r\n    return isNull(object) || isUndefined(object);\r\n}\r\n\r\n/**\r\n * Check if a given value is defined. This is a shorthand function for `!isNullOrUndefined(value)`\r\n * @param {*}   object\r\n *\r\n * @returns {boolean}\r\n */\r\nexport function isDefined(object)\r\n{\r\n    return !isNullOrUndefined(object);\r\n}\r\n\r\n/**\r\n * Check if a given value is defined. Otherwise return a default value\r\n *\r\n * @param {*}   input\r\n * @param {*}   defaultValue\r\n *\r\n * @returns {*}\r\n */\r\nexport function defaultValue(input, defaultValue)\r\n{\r\n    if (isNullOrUndefined(input))\r\n    {\r\n        return defaultValue;\r\n    }\r\n\r\n    return input;\r\n}\r\n\r\nexport function orderArrayByKey(array, key, desc)\r\n{\r\n    return array.sort((valueA, valueB) =>\r\n    {\r\n        if (valueA[key] > valueB[key])\r\n        {\r\n            return 1;\r\n        }\r\n        if (valueA[key] < valueB[key])\r\n        {\r\n            return -1;\r\n        }\r\n\r\n        return 0;\r\n    });\r\n}\r\n/**\r\n * Traverse the DOM upward starting from the input element until a DOM node with a vue component is found.\r\n * Returns the vue component, if found, else returns null.\r\n *\r\n * @param {Element}   element\r\n *\r\n * @returns {Vue}\r\n */\r\nexport function getContainingComponent(element)\r\n{\r\n    let parentComponent = null;\r\n\r\n    while (element)\r\n    {\r\n        if (element.__vue__)\r\n        {\r\n            parentComponent = element.__vue__;\r\n            break;\r\n        }\r\n        element = element.parentElement;\r\n    }\r\n\r\n    return parentComponent;\r\n}\r\n","import { isNullOrUndefined } from \"./utils\";\r\n\r\n/**\r\n * Replace all occurrences of a string\r\n *\r\n * @param {string}  input           The string to apply replacements on\r\n * @param {string}  search          Substring to be replaced\r\n * @param {string}  replacement     String to replace each match with\r\n *\r\n * @returns {string}\r\n */\r\nexport function replaceAll(input, search, replacement)\r\n{\r\n    if (isNullOrUndefined(input))\r\n    {\r\n        return input;\r\n    }\r\n    return (input + \"\").split(search).join(replacement);\r\n}\r\n\r\n/**\r\n * Capitalize first letter of a string\r\n *\r\n * @param {string}  input   The string to capitalize\r\n *\r\n * @returns {string}\r\n */\r\nexport function capitalize(input)\r\n{\r\n    if (isNullOrUndefined(input))\r\n    {\r\n        return input;\r\n    }\r\n    return (\"\" + input).charAt(0).toUpperCase() + (\"\" + input).substr(1);\r\n}\r\n\r\nexport function isMail(input)\r\n{\r\n    const mailRegEx = new RegExp(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/);\r\n\r\n    return mailRegEx.test(input);\r\n}\r\n","<template>\r\n  <form\r\n    :id=\"'newsletter-input-form_' + _uid\"\r\n    ref=\"newsletterForm\"\r\n    method=\"post\"\r\n    @submit.prevent=\"validateData\"\r\n  >\r\n    <div class=\"row\">\r\n      <div\r\n        v-if=\"showNameInputs\"\r\n        class=\"col-6\"\r\n      >\r\n        <div\r\n          class=\"input-unit\"\r\n          data-validate=\"!regex\"\r\n        >\r\n          <label :for=\"'first-name-input_' + _uid\">{{ $translate(\"Ceres::Template.newsletterFirstName\") }}</label>\r\n          <input\r\n            :id=\"'first-name-input_' + _uid\"\r\n            v-model=\"firstName\"\r\n            type=\"text\"\r\n            data-validate-ref=\"/[.:\\/\\d]/g\"\r\n            data-testing=\"nl-first-name\"\r\n          >\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-if=\"showNameInputs\"\r\n        class=\"col-6 pl-0\"\r\n      >\r\n        <div\r\n          class=\"input-unit\"\r\n          data-validate=\"!regex\"\r\n        >\r\n          <label :for=\"'last-name-input_' + _uid\">{{ $translate(\"Ceres::Template.newsletterLastName\") }}</label>\r\n          <input\r\n            :id=\"'last-name-input_' + _uid\"\r\n            v-model=\"lastName\"\r\n            type=\"text\"\r\n            data-validate-ref=\"/[.:\\/\\d]/g\"\r\n            data-testing=\"nl-last-name\"\r\n          >\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12\">\r\n        <div class=\"input-group\">\r\n          <div\r\n            class=\"input-unit\"\r\n            data-validate=\"mail\"\r\n          >\r\n            <label :for=\"'email-input-id_' + _uid\">{{ $translate(\"Ceres::Template.newsletterEmail\") }} {{ $translate(\"Ceres::Template.newsletterIsRequiredFootnote\") }}</label>\r\n            <input\r\n              :id=\"'email-input-id_' + _uid\"\r\n              v-model=\"email\"\r\n              type=\"email\"\r\n              autocomplete=\"email\"\r\n              data-testing=\"nl-mail\"\r\n              @focus=\"loadRecaptcha = true\"\r\n            >\r\n          </div>\r\n          <input\r\n            v-model=\"honeypot\"\r\n            autocomplete=\"none\"\r\n            class=\"honey\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            tabindex=\"-1\"\r\n          >\r\n        </div>\r\n      </div>\r\n      <div\r\n        v-if=\"showPrivacyPolicyCheckbox\"\r\n        class=\"col-12\"\r\n      >\r\n        <div\r\n          class=\"form-check small\"\r\n          data-validate\r\n        >\r\n          <input\r\n            :id=\"'privacy-policy-accept-id_' + _uid\"\r\n            v-model=\"privacyPolicyValue\"\r\n            type=\"checkbox\"\r\n            class=\"form-check-input\"\r\n            name=\"privacy-policy-accept\"\r\n            data-testing=\"nl-policy\"\r\n          >\r\n          <label\r\n            :for=\"'privacy-policy-accept-id_' + _uid\"\r\n            class=\"form-check-label\"\r\n            v-html=\"privacyPolicyText\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 mt-3\">\r\n        <div class=\"input-group-btn\">\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-block btn-primary btn-appearance\"\r\n            :disabled=\"isDisabled\"\r\n            data-testing=\"nl-send\"\r\n            @click=\"validateData\"\r\n          >\r\n            <icon\r\n              icon=\"paper-plane-o\"\r\n              :loading=\"isDisabled\"\r\n            />\r\n            {{ $translate(\"Ceres::Template.newsletterSubscribeButtonLabel\") }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 text-right small mt-2\">\r\n        {{ $translate(\"Ceres::Template.newsletterIsRequiredFootnote\") }} {{ $translate(\"Ceres::Template.newsletterIsRequired\") }}\r\n      </div>\r\n    </div>\r\n    <recaptcha v-if=\"!!$ceres.config.global.googleRecaptchaApiKey && loadRecaptcha\" />\r\n  </form>\r\n</template>\r\n<script>\r\nimport ValidationService from \"../../../../../../../plugin-ceres/resources/js/src/app/services/ValidationService\"\r\nimport { executeReCaptcha } from \"../../../../../../../plugin-ceres/resources/js/src/app/helper/executeReCaptcha\"\r\nexport default {\r\n    props: {\r\n        showNameInputs:\r\n            {\r\n                type: Boolean,\r\n                default: false\r\n            },\r\n        showPrivacyPolicyCheckbox:\r\n            {\r\n                type: Boolean,\r\n                default: true\r\n            },\r\n        emailFolder:\r\n            {\r\n                type: Number,\r\n                default: 0\r\n            },\r\n        uuid:{\r\n            type: text,\r\n            default :\"\"\r\n        },\r\n        apikey:{\r\n            type: text,\r\n            default :\"\"\r\n        },\r\n        accountNumber:{\r\n            type: text,\r\n            default :\"\"\r\n        }\r\n    },\r\n    data ()\r\n    {\r\n        return {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            isDisabled: false,\r\n            privacyPolicyValue: false,\r\n            honeypot: \"\",\r\n            loadRecaptcha: false\r\n        }\r\n    },\r\n    computed:\r\n        {\r\n            privacyPolicyText ()\r\n            {\r\n                const link = \"<a href=\\\"\" + App.urls.privacyPolicy + \"\\\" target=\\\"_blank\\\"><span class=\\\"text-primary text-appearance\\\">\" +\r\n                    this.$translate(\"Ceres::Template.checkoutPrivacyPolicy\", { hyphen: \"&shy;\" }) +\r\n                    \"</span></a>\"\r\n\r\n                return this.$translate(\"Ceres::Template.newsletterAcceptPrivacyPolicy\", { policy: link }) + this.$translate(\"Ceres::Template.newsletterIsRequiredFootnote\")\r\n            }\r\n        },\r\n    methods: {\r\n        validateData ()\r\n        {\r\n            this.isDisabled = true\r\n            ValidationService.validate($(\"#newsletter-input-form_\" + this._uid)).done(() =>\r\n            {\r\n                this.save()\r\n            }).fail(invalidFields =>\r\n            {\r\n                ValidationService.markInvalidFields(invalidFields, \"error\")\r\n                invalidFields.filter(field =>\r\n                {\r\n                    return field.dataset.validate !== null\r\n                }).map((field) =>\r\n                {\r\n                    return {\r\n                        type: field.dataset.validate,\r\n                        name: field.innerText\r\n                    }\r\n                }).forEach((field) =>\r\n                {\r\n                    if (field.type === \"!regex\")\r\n                    {\r\n                        window.CeresNotification.error(this.$translate(\"Ceres::Template.newsletterNotAllowedCharacters\", { name: field.name }))\r\n                    }\r\n                })\r\n                this.isDisabled = false\r\n            })\r\n        },\r\n        save ()\r\n        {\r\n            const recaptchaEl = this.$el.querySelector(\"[data-recaptcha]\")\r\n\r\n            if (App.config.global.googleRecaptchaApiKey && (!window.grecaptcha || !recaptchaEl))\r\n            {\r\n                window.CeresNotification.error(this.$translate(\"Ceres::Template.newsletterAcceptRecaptchaCookie\"))\r\n                this.isDisabled = false\r\n                return\r\n            }\r\n            executeReCaptcha(this.$el).then((recaptchaToken) =>\r\n            {\r\n                if (this.honeypot !== \"\")\r\n                {\r\n                    window.CeresNotification.warn(\r\n                        this.$translate(\"Ceres::Template.newsletterHoneypotWarning\")\r\n                    )\r\n                    this.resetInputs()\r\n                }\r\n                else\r\n                {\r\n                    const formData = {\r\n                        // @customer - This is the base configuration\r\n                        base: {\r\n                            account_number: \"1241\",\r\n                            apikey: \"c14c85f6-ee13-11ec-9aba-c43772f7ef7d\",\r\n                            // @internal - unique object identifier\r\n                            uuid: \"27558bd7-ee17-11ec-9aba-c43772f7ef7d\"\r\n                        },\r\n                        // @customer - Lead Information\r\n                        contact: {\r\n                            standard: [\r\n                                {\r\n                                    field_name: \"email\",\r\n                                    field_value: this.email,\r\n                                    datatype: \"Email\",\r\n                                    regex: \"^[_a-zA-Z0-9-]+(.[_a-zA-Z0-9-]+)*@[a-zA-Z0-9-]+(.[a-zA-Z0-9-]+)*(.[a-z]{2,9})$\",\r\n                                    required: \"1\"\r\n                                }\r\n                            ],\r\n                            custom: []\r\n                        }\r\n                    }\r\n                    const formJson = JSON.stringify(formData)\r\n                    const formbtoa = btoa(formJson)\r\n\r\n                    $.ajax({\r\n                        url: \"https://api-in-one.net/v2.0/webhook/receive\",\r\n                        type: \"POST\",\r\n                        async: false,\r\n                        timeout: 0,\r\n                        header: {\r\n                            \"Access-Control-Allow-Origin\": \"*\",\r\n                            \"Access-Control-Allow-Methods\": \"PUT, GET, POST, DELETE\",\r\n                            \"Access-Control-Allow-Headers\": \"access-control-allow-headers,access-control-allow-methods,access-control-allow-origin,access-control-max-age,content-type,bearer\",\r\n                            \"Access-Control-Max-Age\": \"86400\"\r\n                        },\r\n                        data: formbtoa\r\n                    }).done(result => this.successNotification()).done(result => this.resetInputs()).fail(result => this.errorNotification()).always(result => this.isDisabled = false).always(this.resetRecaptcha())\r\n                }\r\n            })\r\n        },\r\n        resetInputs ()\r\n        {\r\n            this.firstName = \"\"\r\n            this.lastName = \"\"\r\n            this.email = \"\"\r\n            this.privacyPolicyValue = false\r\n        },\r\n        successNotification ()\r\n        {\r\n            window.CeresNotification.success(this.$translate(\"Ceres::Template.newsletterSuccessMessage\"))\r\n        },\r\n        errorNotification ()\r\n        {\r\n            window.CeresNotification.error(this.$translate(\"Ceres::Template.newsletterErrorMessage\"))\r\n        },\r\n        resetRecaptcha ()\r\n        {\r\n            if (App.config.global.googleRecaptchaVersion === 2 && window.grecaptcha)\r\n            {\r\n                const recaptchaId = this.$el.querySelector(\"[data-recaptcha]\")\r\n\r\n                window.grecaptcha.reset(recaptchaId)\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TreactionNewsletterInput.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TreactionNewsletterInput.vue?vue&type=script&lang=js&\"","export function executeReCaptcha(form)\r\n{\r\n    let response = Promise.resolve(null);\r\n    const recaptchaElement = form.querySelector(\"[data-recaptcha]\");\r\n\r\n    if (window.grecaptcha && recaptchaElement)\r\n    {\r\n        response = new Promise((resolve, reject) =>\r\n        {\r\n            if (App.config.global.googleRecaptchaVersion === 3)\r\n            {\r\n                window.grecaptcha.execute(\r\n                    App.config.global.googleRecaptchaApiKey,\r\n                    { action: \"homepage\" }\r\n                ).then(response =>\r\n                {\r\n                    if (response)\r\n                    {\r\n                        resolve(response);\r\n                    }\r\n                    else\r\n                    {\r\n                        reject();\r\n                    }\r\n                });\r\n            }\r\n            else\r\n            {\r\n                window.grecaptcha.execute(recaptchaElement.dataset.recaptcha);\r\n                recaptchaElement\r\n                    .querySelector(\"[name=\\\"g-recaptcha-response\\\"]\")\r\n                    .addEventListener(\"recaptcha-response\", (evt) =>\r\n                    {\r\n                        if (evt.target.value)\r\n                        {\r\n                            resolve(evt.target.value);\r\n                        }\r\n                        else\r\n                        {\r\n                            window.grecaptcha.reset(recaptchaElement.dataset.recaptcha);\r\n                            reject();\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    return response;\r\n}\r\n","import { render, staticRenderFns } from \"./TreactionNewsletterInput.vue?vue&type=template&id=72825e9b&\"\nimport script from \"./TreactionNewsletterInput.vue?vue&type=script&lang=js&\"\nexport * from \"./TreactionNewsletterInput.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","ref","attrs","id","_uid","method","on","submit","$event","preventDefault","validateData","apply","arguments","staticClass","showNameInputs","for","_v","_s","$translate","directives","name","rawName","value","firstName","expression","type","domProps","input","target","composing","_e","lastName","email","autocomplete","focus","loadRecaptcha","honeypot","tabindex","showPrivacyPolicyCheckbox","privacyPolicyValue","checked","Array","isArray","_i","change","$$a","$$el","$$c","$$i","concat","slice","innerHTML","privacyPolicyText","disabled","isDisabled","click","icon","loading","$ceres","config","global","googleRecaptchaApiKey","_withStripped","$form","isNull","object","getInvalidFields","form","$","invalidFormControls","find","each","i","elem","_validateElement","push","$elem","attributes","hasOwnProperty","validationKeys","attr","split","map","trim","requiredCount","hasError","_findFormControls","formControl","$formControl","validationKey","is","_isActive","groupName","$group","range","min","max","_eval","filter","length","_validateGroup","selectedOption","children","text","_validateSelect","startsWith","_validateInput","replace","_hasValue","isNumeric","val","_compareRef","match","year","month","day","_isValidDate","RegExp","test","_isMail","_isPassword","regex","_regex","console","error","Function","validate","deferred","Deferred","invalidFields","rejectWith","resolveWith","markInvalidFields","fields","errorClass","addClass","removeClass","off","markFailedValidationFields","validationErrors","attribute","fieldLabel","attributeCamel","toLowerCase","unmarkAllFields","props","default","emailFolder","uuid","apikey","accountNumber","data","computed","hyphen","policy","methods","ValidationService","fail","forEach","window","save","response","recaptchaElement","executeReCaptcha","Promise","resolve","querySelector","grecaptcha","reject","App","googleRecaptchaVersion","execute","action","then","dataset","recaptcha","addEventListener","evt","reset","base","account_number","contact","standard","field_name","field_value","datatype","required","custom","url","async","timeout","header","done","always","resetInputs","successNotification","errorNotification","resetRecaptcha"],"sourceRoot":""}